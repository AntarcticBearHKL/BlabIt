{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://D%3A/BlabIt/front_end/next_app/components/context_section.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useRouter } from \"next/navigation\"; // 导入 useRouter\r\n\r\nconst ContextSection = () => {\r\n  const router = useRouter(); // 初始化 useRouter\r\n\r\n  const handleButtonClick = () => {\r\n    router.push(\"/context_analysis\"); // 跳转到 context_analysis 页面\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-6\">\r\n      {/* 标题 */}\r\n      <h1 className=\"text-4xl font-bold text-gray-800 mb-6\">\r\n        这是一个标题\r\n      </h1>\r\n\r\n      {/* 大段文字 */}\r\n      <p className=\"text-lg text-gray-600 mb-8 max-w-2xl text-center\">\r\n        这里是一大段文字内容。它可以包含多行文字，用于描述某些信息或提供详细的说明。\r\n        Tailwind CSS 提供了强大的样式工具，使得布局和设计变得非常简单。\r\n        你可以根据需要调整文字内容和样式。\r\n      </p>\r\n\r\n      {/* 大号按钮 */}\r\n      <button \r\n        className=\"px-8 py-4 bg-blue-500 text-white text-xl font-semibold rounded-lg shadow-md hover:bg-blue-600 transition\"\r\n        onClick={handleButtonClick} // 添加点击事件\r\n        >\r\n        点击按钮\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContextSection;"],"names":[],"mappings":";;;;AAEA,sOAA6C,eAAe;AAF5D;;;AAIA,MAAM,iBAAiB;IACrB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD,KAAK,gBAAgB;IAE5C,MAAM,oBAAoB;QACxB,OAAO,IAAI,CAAC,sBAAsB,0BAA0B;IAC9D;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAG,WAAU;0BAAwC;;;;;;0BAKtD,8OAAC;gBAAE,WAAU;0BAAmD;;;;;;0BAOhE,8OAAC;gBACC,WAAU;gBACV,SAAS;0BACR;;;;;;;;;;;;AAKT;uCAEe","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file://D%3A/BlabIt/front_end/next_app/components/fp.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\n\r\nimport ContextSection from \"./context_section\";\r\n\r\nconst FullPageSlider = () => {\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const pages = [\r\n    { id: 0, content: <ContextSection /> },\r\n    { id: 1, content: <ContextSection /> },\r\n    { id: 2, content: <ContextSection /> },\r\n  ];\r\n\r\n  const handleSwipe = (direction:string) => {\r\n    if (direction === \"LEFT\" && currentPage < pages.length - 1) {\r\n      setCurrentPage(currentPage + 1);\r\n    } else if (direction === \"RIGHT\" && currentPage > 0) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const handlers = useSwipeable({\r\n    onSwipedLeft: () => handleSwipe(\"LEFT\"),\r\n    onSwipedRight: () => handleSwipe(\"RIGHT\"),\r\n  });\r\n\r\n  return (\r\n    <div\r\n      {...handlers}\r\n      style={{\r\n        display: \"flex\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          transform: `translateX(-${currentPage * 100}vw)`,\r\n          transition: \"transform 0.5s ease\",\r\n          width: `${pages.length * 100}vw`,\r\n        }}\r\n      >\r\n        {pages.map((page) => (\r\n          <div key={page.id} className=\"min-h-screen w-screen\">\r\n            {page.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullPageSlider;"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,iBAAiB;IACrB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,MAAM,QAAQ;QACZ;YAAE,IAAI;YAAG,uBAAS,8OAAC,8HAAA,CAAA,UAAc;;;;;QAAI;QACrC;YAAE,IAAI;YAAG,uBAAS,8OAAC,8HAAA,CAAA,UAAc;;;;;QAAI;QACrC;YAAE,IAAI;YAAG,uBAAS,8OAAC,8HAAA,CAAA,UAAc;;;;;QAAI;KACtC;IAED,MAAM,cAAc,CAAC;QACnB,IAAI,cAAc,UAAU,cAAc,MAAM,MAAM,GAAG,GAAG;YAC1D,eAAe,cAAc;QAC/B,OAAO,IAAI,cAAc,WAAW,cAAc,GAAG;YACnD,eAAe,cAAc;QAC/B;IACF;IAEA,MAAM,WAAW,CAAA,GAAA,iJAAA,CAAA,eAAY,AAAD,EAAE;QAC5B,cAAc,IAAM,YAAY;QAChC,eAAe,IAAM,YAAY;IACnC;IAEA,qBACE,8OAAC;QACE,GAAG,QAAQ;QACZ,OAAO;YACL,SAAS;YACT,OAAO;YACP,QAAQ;YACR,UAAU;YACV,UAAU;QACZ;kBAEA,cAAA,8OAAC;YACC,OAAO;gBACL,SAAS;gBACT,WAAW,CAAC,YAAY,EAAE,cAAc,IAAI,GAAG,CAAC;gBAChD,YAAY;gBACZ,OAAO,GAAG,MAAM,MAAM,GAAG,IAAI,EAAE,CAAC;YAClC;sBAEC,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;oBAAkB,WAAU;8BAC1B,KAAK,OAAO;mBADL,KAAK,EAAE;;;;;;;;;;;;;;;AAO3B;uCAEe","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file://D%3A/BlabIt/front_end/next_app/components/context_analysis.tsx"],"sourcesContent":["\"use client\";\r\n\r\nconst ContextAnalysis = () => {\r\n  return (\r\n    <div className=\"w-screen h-screen flex justify-center items-center bg-gray-100\">\r\n      <h1 className=\"text-2xl font-bold text-gray-800\">This component occupies the entire page!</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContextAnalysis;"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAG,WAAU;sBAAmC;;;;;;;;;;;AAGvD;uCAEe","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file://D%3A/BlabIt/front_end/next_app/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport Link from 'next/link'\nimport FullPageSlider from \"../components/fp\";\nimport ContextAnalysis from \"../components/context_analysis\";\n\nexport default function Home() {\n  return (\n    <nav>\n      <Link href=\"/\">\n        <FullPageSlider />\n      </Link>\n      \n      <Link href=\"/context_analysis\">\n        <ContextAnalysis />\n      </Link>\n    </nav>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,qBACE,8OAAC;;0BACC,8OAAC,4JAAA,CAAA,UAAI;gBAAC,MAAK;0BACT,cAAA,8OAAC,iHAAA,CAAA,UAAc;;;;;;;;;;0BAGjB,8OAAC,4JAAA,CAAA,UAAI;gBAAC,MAAK;0BACT,cAAA,8OAAC,+HAAA,CAAA,UAAe;;;;;;;;;;;;;;;;AAIxB","debugId":null}}]
}