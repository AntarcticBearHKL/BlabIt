{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://D%3A/BlabIt/front_end/next_app/components/audio_recorder.tsx"],"sourcesContent":["import { useState, useRef } from 'react';\r\n\r\nexport const useAudioRecorder = () => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [audioBlob, setAudioBlob] = useState<Blob | null>(null);\r\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\r\n  const chunksRef = useRef<Blob[]>([]);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      // 添加 iOS Safari 所需的约束\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        audio: {\r\n          // iOS Safari 需要这些具体参数\r\n          echoCancellation: true,\r\n          noiseSuppression: true,\r\n          autoGainControl: true,\r\n          sampleRate: 44100,\r\n          channelCount: 1\r\n        }\r\n      });\r\n\r\n      // 检查浏览器支持的 MIME 类型\r\n      const mimeType = [\r\n        'audio/webm',\r\n        'audio/mp4',\r\n        'audio/aac',\r\n        'audio/ogg'\r\n      ].find(type => MediaRecorder.isTypeSupported(type)) || 'audio/webm';\r\n\r\n      mediaRecorderRef.current = new MediaRecorder(stream, {\r\n        mimeType,\r\n        audioBitsPerSecond: 128000\r\n      });\r\n      \r\n      // 设置较小的时间片，提高兼容性\r\n      mediaRecorderRef.current.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          chunksRef.current.push(event.data);\r\n        }\r\n      };\r\n\r\n      mediaRecorderRef.current.onstop = () => {\r\n        const blob = new Blob(chunksRef.current, { type: mimeType });\r\n        setAudioBlob(blob);\r\n        chunksRef.current = [];\r\n      };\r\n\r\n      // 每秒收集一次数据，避免内存问题\r\n      mediaRecorderRef.current.start(1000);\r\n      setIsRecording(true);\r\n    } catch (error) {\r\n      console.error('Error accessing microphone:', error);\r\n      // 添加更详细的错误处理\r\n      if (error instanceof DOMException) {\r\n        if (error.name === 'NotAllowedError') {\r\n          alert('请允许访问麦克风权限');\r\n        } else if (error.name === 'NotFoundError') {\r\n          alert('未找到录音设备');\r\n        } else {\r\n          alert('录音初始化失败，请检查设备权限');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current && isRecording) {\r\n      try {\r\n        mediaRecorderRef.current.stop();\r\n        setIsRecording(false);\r\n        // 确保所有轨道都被正确停止\r\n        mediaRecorderRef.current.stream.getTracks().forEach(track => {\r\n          track.stop();\r\n          track.enabled = false;\r\n        });\r\n      } catch (error) {\r\n        console.error('Error stopping recording:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return {\r\n    isRecording,\r\n    audioBlob,\r\n    startRecording,\r\n    stopRecording\r\n  };\r\n};"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,mBAAmB;IAC9B,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IACxD,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAwB;IACtD,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAU,EAAE;IAEnC,MAAM,iBAAiB;QACrB,IAAI;YACF,sBAAsB;YACtB,MAAM,SAAS,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;gBACvD,OAAO;oBACL,sBAAsB;oBACtB,kBAAkB;oBAClB,kBAAkB;oBAClB,iBAAiB;oBACjB,YAAY;oBACZ,cAAc;gBAChB;YACF;YAEA,mBAAmB;YACnB,MAAM,WAAW;gBACf;gBACA;gBACA;gBACA;aACD,CAAC,IAAI,CAAC,CAAA,OAAQ,cAAc,eAAe,CAAC,UAAU;YAEvD,iBAAiB,OAAO,GAAG,IAAI,cAAc,QAAQ;gBACnD;gBACA,oBAAoB;YACtB;YAEA,iBAAiB;YACjB,iBAAiB,OAAO,CAAC,eAAe,GAAG,CAAC;gBAC1C,IAAI,MAAM,IAAI,CAAC,IAAI,GAAG,GAAG;oBACvB,UAAU,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI;gBACnC;YACF;YAEA,iBAAiB,OAAO,CAAC,MAAM,GAAG;gBAChC,MAAM,OAAO,IAAI,KAAK,UAAU,OAAO,EAAE;oBAAE,MAAM;gBAAS;gBAC1D,aAAa;gBACb,UAAU,OAAO,GAAG,EAAE;YACxB;YAEA,kBAAkB;YAClB,iBAAiB,OAAO,CAAC,KAAK,CAAC;YAC/B,eAAe;QACjB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;YAC7C,aAAa;YACb,IAAI,iBAAiB,cAAc;gBACjC,IAAI,MAAM,IAAI,KAAK,mBAAmB;oBACpC,MAAM;gBACR,OAAO,IAAI,MAAM,IAAI,KAAK,iBAAiB;oBACzC,MAAM;gBACR,OAAO;oBACL,MAAM;gBACR;YACF;QACF;IACF;IAEA,MAAM,gBAAgB;QACpB,IAAI,iBAAiB,OAAO,IAAI,aAAa;YAC3C,IAAI;gBACF,iBAAiB,OAAO,CAAC,IAAI;gBAC7B,eAAe;gBACf,eAAe;gBACf,iBAAiB,OAAO,CAAC,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,CAAA;oBAClD,MAAM,IAAI;oBACV,MAAM,OAAO,GAAG;gBAClB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;YAC7C;QACF;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file://D%3A/BlabIt/front_end/next_app/components/context_section.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useRouter } from \"next/navigation\"; // 导入 useRouter\r\nimport { useState } from 'react';\r\nimport { useAudioRecorder } from \"./audio_recorder\"; // 导入自定义的音频录制器\r\nimport { setSpeechText } from '@/store/slices/speechSlice'\r\nimport { RootState } from '../store'; // 导入 Redux store 的类型\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst ContextSection = () => {\r\n  const router = useRouter(); // 初始化 useRouter\r\n  const { isRecording, audioBlob, startRecording, stopRecording } = useAudioRecorder();\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch()\r\n  const speechText = useSelector((state: RootState) => state.speech.speechText)\r\n\r\n  const handleMouseDown = () => {\r\n    startRecording();\r\n  };\r\n\r\n  const handleMouseUp = async () => {\r\n    await stopRecording();\r\n    // 等待 audioBlob 更新\r\n    setTimeout(async () => {\r\n      if (!audioBlob) return;\r\n      await handleUpload();\r\n    }, 100);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!audioBlob) return;\r\n\r\n    try {\r\n      setIsUploading(true);\r\n      const formData = new FormData();\r\n      formData.append('audio', audioBlob, 'recording.webm');\r\n\r\n      const response = await fetch('http://127.0.0.1:5000/transcribe', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Upload failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Upload successful:', data);\r\n      \r\n      dispatch(setSpeechText(data.text)); // 更新 Redux store 中的文本\r\n      router.push('/context'); // 上传成功后跳转到结果页面\r\n\r\n    } catch (error) {\r\n      console.error('Error uploading audio:', error);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-6\">\r\n      <h1 className=\"text-4xl font-bold text-gray-800 mb-6\">\r\n        这是一个标题\r\n      </h1>\r\n\r\n      <p className=\"text-lg text-gray-600 mb-8 max-w-2xl text-center\">\r\n        按住按钮开始录音，松开按钮自动上传\r\n      </p>\r\n\r\n      <div className=\"flex flex-col items-center gap-4\">\r\n        <button\r\n          onMouseDown={handleMouseDown}\r\n          onMouseUp={handleMouseUp}\r\n          onMouseLeave={handleMouseUp} \r\n          className={`px-6 py-3 rounded-lg font-semibold select-none ${\r\n            isRecording \r\n              ? 'bg-red-500 hover:bg-red-600' \r\n              : 'bg-blue-500 hover:bg-blue-600'\r\n          } text-white transition`}\r\n        >\r\n          {isRecording ? '录音中...' : '按住录音'}\r\n        </button>\r\n\r\n        {isUploading && (\r\n          <div className=\"text-gray-600\">\r\n            上传中...\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContextSection;"],"names":[],"mappings":";;;;AAEA,sOAA6C,eAAe;AAC5D;AACA,+NAAqD,cAAc;AACnE;AAGA;AARA;;;;;;;AAUA,MAAM,iBAAiB;IACrB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD,KAAK,gBAAgB;IAC5C,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,6HAAA,CAAA,mBAAgB,AAAD;IACjF,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,aAAa,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAqB,MAAM,MAAM,CAAC,UAAU;IAE5E,MAAM,kBAAkB;QACtB;IACF;IAEA,MAAM,gBAAgB;QACpB,MAAM;QACN,kBAAkB;QAClB,WAAW;YACT,IAAI,CAAC,WAAW;YAChB,MAAM;QACR,GAAG;IACL;IAEA,MAAM,eAAe;QACnB,IAAI,CAAC,WAAW;QAEhB,IAAI;YACF,eAAe;YACf,MAAM,WAAW,IAAI;YACrB,SAAS,MAAM,CAAC,SAAS,WAAW;YAEpC,MAAM,WAAW,MAAM,MAAM,oCAAoC;gBAC/D,QAAQ;gBACR,MAAM;YACR;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,sBAAsB;YAElC,SAAS,CAAA,GAAA,8HAAA,CAAA,gBAAa,AAAD,EAAE,KAAK,IAAI,IAAI,sBAAsB;YAC1D,OAAO,IAAI,CAAC,aAAa,eAAe;QAE1C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;QAC1C,SAAU;YACR,eAAe;QACjB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAwC;;;;;;0BAItD,8OAAC;gBAAE,WAAU;0BAAmD;;;;;;0BAIhE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,aAAa;wBACb,WAAW;wBACX,cAAc;wBACd,WAAW,CAAC,+CAA+C,EACzD,cACI,gCACA,gCACL,sBAAsB,CAAC;kCAEvB,cAAc,WAAW;;;;;;oBAG3B,6BACC,8OAAC;wBAAI,WAAU;kCAAgB;;;;;;;;;;;;;;;;;;AAOzC;uCAEe","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file://D%3A/BlabIt/front_end/next_app/components/full_page_slider.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport { Drawer } from \"antd\";\r\n\r\nimport ContextSection from \"./context_section\";\r\n\r\nconst FullPageSlider = () => {\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n  const pages = [\r\n    { id: 0, content: <ContextSection /> },\r\n    { id: 1, content: <EnchanterSection /> },\r\n    { id: 2, content: <ContextSection /> },\r\n  ];\r\n\r\n  const handleSwipe = (direction:string) => {\r\n    if (direction === \"LEFT\" && currentPage < pages.length - 1) {\r\n      setCurrentPage(currentPage + 1);\r\n    } else if (direction === \"RIGHT\" && currentPage > 0) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const handlers = useSwipeable({\r\n    onSwipedLeft: () => handleSwipe(\"LEFT\"),\r\n    onSwipedRight: () => handleSwipe(\"RIGHT\"),\r\n  });\r\n\r\n  return (\r\n    <div\r\n      {...handlers}\r\n      style={{ display: \"flex\", width: \"100vw\", height: \"100vh\", overflow: \"hidden\", position: \"relative\", }}\r\n    >\r\n      <div\r\n        onClick={() => setDrawerOpen(true)}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"20px\",\r\n          right: \"20px\",\r\n          width: \"50px\",\r\n          height: \"50px\",\r\n          borderRadius: \"50%\",\r\n          border: \"2px solid #fff\",\r\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n          cursor: \"pointer\",\r\n          zIndex: 1000,\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        <span style={{ color: \"#fff\" }}>⚙️</span>\r\n      </div>\r\n\r\n\r\n      <div\r\n        style={{ display: \"flex\", transform: `translateX(-${currentPage * 100}vw)`, transition: \"transform 0.5s ease\", width: `${pages.length * 100}vw`, }} \r\n      >\r\n        {pages.map((page) => (\r\n          <div key={page.id} className=\"min-h-screen w-screen\">\r\n            {page.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <Drawer\r\n        placement=\"bottom\"\r\n        open={drawerOpen}\r\n        onClose={() => setDrawerOpen(false)}\r\n        height={300}\r\n        closeIcon={false}\r\n        maskClosable={true}\r\n      >\r\n        <h3>Login</h3>\r\n        <p>这里可以放置你的抽屉内容</p>\r\n      </Drawer>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullPageSlider;"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,iBAAiB;IACrB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,QAAQ;QACZ;YAAE,IAAI;YAAG,uBAAS,8OAAC,8HAAA,CAAA,UAAc;;;;;QAAI;QACrC;YAAE,IAAI;YAAG,uBAAS,8OAAC;;;;;QAAoB;QACvC;YAAE,IAAI;YAAG,uBAAS,8OAAC,8HAAA,CAAA,UAAc;;;;;QAAI;KACtC;IAED,MAAM,cAAc,CAAC;QACnB,IAAI,cAAc,UAAU,cAAc,MAAM,MAAM,GAAG,GAAG;YAC1D,eAAe,cAAc;QAC/B,OAAO,IAAI,cAAc,WAAW,cAAc,GAAG;YACnD,eAAe,cAAc;QAC/B;IACF;IAEA,MAAM,WAAW,CAAA,GAAA,iJAAA,CAAA,eAAY,AAAD,EAAE;QAC5B,cAAc,IAAM,YAAY;QAChC,eAAe,IAAM,YAAY;IACnC;IAEA,qBACE,8OAAC;QACE,GAAG,QAAQ;QACZ,OAAO;YAAE,SAAS;YAAQ,OAAO;YAAS,QAAQ;YAAS,UAAU;YAAU,UAAU;QAAY;;0BAErG,8OAAC;gBACC,SAAS,IAAM,cAAc;gBAC7B,OAAO;oBACL,UAAU;oBACV,KAAK;oBACL,OAAO;oBACP,OAAO;oBACP,QAAQ;oBACR,cAAc;oBACd,QAAQ;oBACR,iBAAiB;oBACjB,QAAQ;oBACR,QAAQ;oBACR,SAAS;oBACT,YAAY;oBACZ,gBAAgB;gBAClB;0BAEA,cAAA,8OAAC;oBAAK,OAAO;wBAAE,OAAO;oBAAO;8BAAG;;;;;;;;;;;0BAIlC,8OAAC;gBACC,OAAO;oBAAE,SAAS;oBAAQ,WAAW,CAAC,YAAY,EAAE,cAAc,IAAI,GAAG,CAAC;oBAAE,YAAY;oBAAuB,OAAO,GAAG,MAAM,MAAM,GAAG,IAAI,EAAE,CAAC;gBAAE;0BAEhJ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;wBAAkB,WAAU;kCAC1B,KAAK,OAAO;uBADL,KAAK,EAAE;;;;;;;;;;0BAMrB,8OAAC,kLAAA,CAAA,SAAM;gBACL,WAAU;gBACV,MAAM;gBACN,SAAS,IAAM,cAAc;gBAC7B,QAAQ;gBACR,WAAW;gBACX,cAAc;;kCAEd,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCAAE;;;;;;;;;;;;;;;;;;AAKX;uCAEe","debugId":null}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":["file://D%3A/BlabIt/front_end/next_app/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport FullPageSlider from \"../components/full_page_slider\";\n\nexport default function Home() {\n\n  return (\n    <FullPageSlider />\n  );\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IAEtB,qBACE,8OAAC,+HAAA,CAAA,UAAc;;;;;AAEnB","debugId":null}}]
}